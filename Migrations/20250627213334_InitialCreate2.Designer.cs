// <auto-generated />
using System;
using MedBillPro.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedBillPro.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250627213334_InitialCreate2")]
    partial class InitialCreate2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MedBillPro.Models.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ClaimNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProcessedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ServiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceProvider")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ClaimNumber")
                        .IsUnique();

                    b.HasIndex("PatientId");

                    b.ToTable("Claims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 350.00m,
                            ClaimNumber = "CLM001",
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2829),
                            Description = "Annual Physical Examination",
                            Notes = "Routine checkup completed",
                            PatientId = 1,
                            ProcessedDate = new DateTime(2024, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceProvider = "City Medical Center",
                            Status = "Approved",
                            SubmittedDate = new DateTime(2024, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2831)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 450.00m,
                            ClaimNumber = "CLM002",
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2837),
                            Description = "Cardiology Consultation",
                            Notes = "Awaiting additional documentation",
                            PatientId = 2,
                            ServiceDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceProvider = "West Coast Specialists",
                            Status = "Processing",
                            SubmittedDate = new DateTime(2024, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2838)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 1200.00m,
                            ClaimNumber = "CLM003",
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2842),
                            Description = "MRI Scan",
                            Notes = "Prior authorization required",
                            PatientId = 1,
                            ServiceDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceProvider = "Downtown Radiology",
                            Status = "Pending",
                            SubmittedDate = new DateTime(2024, 2, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2843)
                        },
                        new
                        {
                            Id = 4,
                            Amount = 850.00m,
                            ClaimNumber = "CLM004",
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2847),
                            Description = "Emergency Room Visit",
                            Notes = "Service not covered under current plan",
                            PatientId = 3,
                            ProcessedDate = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceDate = new DateTime(2024, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServiceProvider = "Emergency Care Center",
                            Status = "Denied",
                            SubmittedDate = new DateTime(2024, 2, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2848)
                        });
                });

            modelBuilder.Entity("MedBillPro.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("InsuranceGroupNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsurancePolicyNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("InsuranceProvider")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            City = "New York",
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2421),
                            DateOfBirth = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.smith@email.com",
                            FirstName = "John",
                            InsuranceGroupNumber = "GRP001",
                            InsurancePolicyNumber = "BC123456789",
                            InsuranceProvider = "Blue Cross Blue Shield",
                            LastName = "Smith",
                            Phone = "(555) 123-4567",
                            State = "NY",
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2449),
                            ZipCode = "10001"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Oak Ave",
                            City = "Los Angeles",
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2458),
                            DateOfBirth = new DateTime(1975, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sarah.johnson@email.com",
                            FirstName = "Sarah",
                            InsuranceGroupNumber = "GRP002",
                            InsurancePolicyNumber = "AET987654321",
                            InsuranceProvider = "Aetna",
                            LastName = "Johnson",
                            Phone = "(555) 987-6543",
                            State = "CA",
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2459),
                            ZipCode = "90210"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Pine Blvd",
                            City = "Chicago",
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2463),
                            DateOfBirth = new DateTime(1990, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "michael.brown@email.com",
                            FirstName = "Michael",
                            InsuranceGroupNumber = "GRP003",
                            InsurancePolicyNumber = "CIG456789123",
                            InsuranceProvider = "Cigna",
                            LastName = "Brown",
                            Phone = "(555) 555-0123",
                            State = "IL",
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2464),
                            ZipCode = "60601"
                        });
                });

            modelBuilder.Entity("MedBillPro.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReferenceNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 280.00m,
                            ClaimId = 1,
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2881),
                            Notes = "80% coverage payment",
                            PayerName = "Blue Cross Blue Shield",
                            PaymentDate = new DateTime(2024, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Insurance",
                            ReferenceNumber = "PAY001",
                            Status = "Completed",
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2882)
                        },
                        new
                        {
                            Id = 2,
                            Amount = 70.00m,
                            ClaimId = 1,
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2887),
                            Notes = "Patient copay",
                            PayerName = "John Smith",
                            PaymentDate = new DateTime(2024, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Patient",
                            ReferenceNumber = "PAY002",
                            Status = "Completed",
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2887)
                        },
                        new
                        {
                            Id = 3,
                            Amount = 360.00m,
                            ClaimId = 2,
                            CreatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2891),
                            Notes = "Partial payment received",
                            PayerName = "Aetna",
                            PaymentDate = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PaymentMethod = "Insurance",
                            ReferenceNumber = "PAY003",
                            Status = "Completed",
                            UpdatedAt = new DateTime(2025, 6, 28, 2, 33, 33, 275, DateTimeKind.Local).AddTicks(2891)
                        });
                });

            modelBuilder.Entity("MedBillPro.Models.Claim", b =>
                {
                    b.HasOne("MedBillPro.Models.Patient", "Patient")
                        .WithMany("Claims")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("MedBillPro.Models.Payment", b =>
                {
                    b.HasOne("MedBillPro.Models.Claim", "Claim")
                        .WithMany("Payments")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("MedBillPro.Models.Claim", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("MedBillPro.Models.Patient", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
